build ????

Client: add command "on"-"off" for virtual CD-player
Client: add command "snapshot" that save screenshots into root folder
Client: add studiomodel missed flags like in Quake (EF_ROTATE, EF_ROCKET, EF_GIB etc)
Sound: clear LOOP flag for engine funcs PlaySoundByIndex and PlaySoundAtLocation
Render: fix r_wateralpha, move cvar to server and allow save-restore it
Render: fix old bug with surface->flags
Render: fix crash when studiomodel isn't loaded but trying to draw
Render: remove cvar gl_texturebits
Render: allow 16-bit color mode when decktop has same
Render: rename "vid_gamma" to "gamma", make backward compatibility with GoldSource config
Sound: get support for automatic ambient sounds like in Quake
Sound: add cvar "s_combine_channels" that trying to combine mutilpe channels with same sounds into one
Engine: add "secure" option support for both liblist.gam and gameinfo.txt
Engine: fix bug determine current directory
Server: fix bug when some sound messages can't be sended to client (e.g. not vised map)
Render: allow to load hi-res quake sky (two layers called as sky_solid and sky_alpha)
Physic: fix trace bug when bbox mins are 0 0 0 and bbox maxs are positive values (like quake boxes)
GameUI: add checkbox "allow materials" in menu Video Options.
Client: implement "viewsize" cvar
GameUI: add new function to inteface called as pfnProcessImage
Client: add support for default studiomodel flags like quake effects (light, smoke, blood etc)
Render: add engine mirrors (can be set on map with texture "decals.wad\reflect1")
Client: rewrite client font system to allow support for "hud_scale" feature
Client: re-enable client static entities (see engine function MAKE_STATIC for details)
Sound: clear "loop" flags for client engine functions PlaySoundByName and PlaySoundByIndex
Client: fix potentially crash in StudioRemap code
Client: finalize 'GlowShell' effect on StudioModels
Render: implement software gamma control that based on lightmap adjusting (gl_ignorehwgamma 1)
Render: restore projection and modelview matrices before call V_CalcRefdef to avoid errors on custom rendering (e.g. HLFX 0.5, Trinity Renderers)
Render: remove all stuff for 3dfx gamma control
Render: add missing function R_ScreenToWorld
Engine: add "icon" option support for both liblist.gam and gameinfo.txt
Render: get support for rotational skybox that can be saved and restored with current angle
Engine: fix bug with incorrect detecting Blue-Shift maps in some rare cases
Engine: add autocomplete for 'entpatch' command
Engine: fix Host_Error issues
Network: add IPX and IPX_BROADCAST for backward compatibility with GoldSrc
Engine: do revision for 'allow_studio_scale' cvar in trace code
GameUI: added support for Steam backgrounds
GameUI: hide input symbols for "password" field in "create server" menu page
Client: initial implementation of NetAPI
Render: clear decals code. Add transparent rendering for 'glass' decals
GameUI: added new argument for pfnPIC_Load.
GameUI: fix loading flipped Steam background images
Client: remove gravity for R_Implosion effect
Sound: add SND_MoveMouth16 for support 16-bit sounds lip-sync
Engine: fix potentially crash during parsing titles.txt when file is empty
Engine: increase MAX_VALUE field up to 2048 characters
Console: rename con_gamemaps to con_mapfilter
Sound: add check by PVS for dynamic entity channels
Sound: add sound culling by geometry (cvar 's_cull' for enable or disable) 

build 1662

Client: implement StudioRemapColors function
Client: add simple shadows for stduiomodels (disabled like in GoldSrc)
Client: fix some Paranoia bugs when custom renderer is disabled
Client: implement overview tool (dev_overview)
Client: add debug commands linefile and pointfile
Client: get support for full-color external textures (tga format) - world, studiomodels and decals
Client: fixed some HLFX 0.6 bugs
Client: fixed follow studiomodels (like flags in CTF)
Server: add pfnGetApproxWavePlayLen
Sound: get support for mp3's with wav header
Server: fixed FIND_CLIENT_IN_PVS
Server: fixed PlaybackEvent, use camera PVS point when client see in
Render: enable lightmaps on a transparent surfaces like windows (r_lighting_extended 2)
Server: func_pushable can push players which standing on (sv_fix_pushstep)
Render: partially fix for underwater fog (temporary solution)

build 1613

Client: fix drawing beams for 'solid' mode
Image: fix BMP loader for 4-bit color bmp's
Client: fix lightlevel calculating for local client (remove 'ambient' base from final value)
GameUI: first implementation of custom strings and support 'strings.lst' parsing
GameUI: replace unneeded button 'credits' with button 'previews'
Render: fix sprite interpolation
Render: fix angled sprites offset
Render: implement detail textures like in Steam Half-Life (thx n00b)
Client: rework env_funnel effect
Engine: get full support for input, processing and drawing russian letters
Console: add console commands 'messagemode' and 'messagemode2'
Console: fix bug with autocomplete (enable sort for found cmds)
Client: added HUD_ChatInputPosition for CS 1.6

build 1598

Client: fix crosshair drawing
Sound: change libmad mp3 decoder on a mpg123
Client: fix gibs randomization for TE_BREAKMODEL
Engine: fix modelloader bug (engine crash after not found map)
Video: add resolution 1366x768
GameUI: fix skill select
Network: change 'svc_setangle' message, include rollangle
Render: fix chrome rendering on a studiomodels
Render: added video memory economy mode - cvar 'gl_luminance_textures'
GameDLL: first implementation of extended engineinterface. Metamod is supported now

build 1557

Sound: fixed wrong sound angles when client see in the camera
Render: fix crash on change gl_texturemode and gl_anisotropy.
Client: change relationsip for GetLocalPlayer. Now it's always valid.
Server: rewrite SV_Multicast for correct work with custom user cameras
Server: rewrite FIND_CLIENT_IN_PVS like in QW 

build 1540

Fixed many-many small and large bugs before final release

build 1529

FS: add "fallback_dir" option
Server: fix func_pushable interaction with movers. Add new cvar "sv_allow_rotate_pushables"
Server: added support for 'SV_SaveGameComment' export
Server: fixed backup for quick.sav and autosave.save (quick01.sav and autosave01.sav) 
Client: add commandline option "-nointro" to skip start movies
Pmove: add sv_clienttrace that shared across network
Render: implement "envshot" and "skyshot" commands for make cubemaps or skyboxes
Server: fix remote connection (rcon)
Render: add glare reduction option in menu
Server: fix FindEntityInSphere bug (satchel issues in multiplayer)
GameUI: added to scrollbar in srcoll lists (thx ADAMIX)

build 1516

Engine: fix Sys_Error blowout
GameUI: implement new credits effect in Half-Life (when game is end)
GameUI: use system cursor instead of emulated

build 1515

Engine: fix some bugs

build 1507

Console: implement Con_NPrintf and Con_NXPrintf
Render:  adding better lighting for studiomodels (right lighting for long sequences e.g. forklift.mdl)
Network: clamp all integer values to prevent them out of range
Client: VGUI implementation
Render: fix decals loading
Server: fix NAN error on a crossbow launch

build 1488

Render: fix invisible sprites when game is paused
Render: implement new better sprites lighting
GameUI: HL-style buttons (old good menu form WON version)
Render: fix some rendering bugs

build 1482

Engine: fixed critical bug
Launch: remove all built-in tools
Engine: add underwater fog
Engine: add cvar to control studio model scaling (enable or disable)
Engine: fixed bug with mouse in multiplayer (not work in menu)
Engine: fixed lag on rpg laserspot
Engine: added weapon and movement prediction (may be bugly, use with caution)
GameUI: added pfnRandomLong and pfnRandomFloat built-ins (and keep compatibility with old versions)
Engine: added map_background (special command for loading background maps like in Source Engine)
GameUI: added support for chaptermapbackground.txt script-file (random choose background maps)
Render: fix some rendering bugs for mods with custom renderer (Paranoia, HLFX etc)

build 1433

Engine: rework hitbox trace
Engine: implement new check for blue-shift map format
Engine: fix PointContents for custom contents checking (spirit)
Engine: fix "angle" field on maps (typically for gearbox)
GameUI: implement 'mouse look' checkbox

build 1430

Engine: fix crash with invalid room_type set (more than 60)
Engine: fix stuck on elevators or tracktrains for clients

build 1428

Engine: fix trigger_camera serialization bug
Engine: many-many physics bugs fixed
Engine: reworking monster's movement and path finding
Engine: hlfx 0.6 is now working
FS: fix bug with game and base directory dectecting when they matches
FS: watch for changes in liblist.gam and update gameinfo.txt (feature)
Engine: fix some rendering bugs
GameUI: added 'suitvolume' control
GameUI: rewrite playeyrmodel drawing, so you can shows changes when hi\low resolution button is toggled
GameUI: remove choosing audio and video library (interface changed!)
Engine: fix train startup sound on new level 

build 1422

Render: fix decals serialization bug
Engine: fix movie plaback bug (black screen)
Engine: fix crash on loading encrypted client.dll
GameUI: now recalc resolution when vid_mode is changed
Sound: fix musicvolume bug
Image: fix indexalpha palette bug
Physic: fix stuck on some items (weapons, ammo)

build 1418

Tools: move all tools into launch.dll
Sound: moving snd_dx.dll into engine.dll
Sound: implement CDAudio emulator with support mp3 tracks from original Half-Life
Sound: implement mp3 support
GameUI: GameUI.dll renamed to MainUI.dll to avoid conflict with original valve's GameUI.dll
Engine: support for StartupVids.txt
Engine: get full compatibility with hl.dll
FS: recode wad resource management (now support lumps from wads with same name)
Engine: trigger_camera is now correctly saved and restored
Render: add sorting for translucent surfaces
Render: make support for 'static' models (any opaque non-moving brushes engine automatically make as part of world)
Render: correct serialization for decals on bmodels

build 1338

Engine: fix a broken demos recording\playing
GameUI: get support for internal resources (built-in)
GameUI: make font.bmp, cursor.bmp and typing.bmp as part of GameUI.dll
GameUI: remove demo menus heads.

build 1334

Engine: prevent auto-repeat for most keys in-game
Engine: implement AVI movies support (instead of RoQ support)
Engine: enable logo.avi in main menu (see GameUI source for details) 

build 1313

Launch: code revision, remove dead code, implement some missed functions
Sound: fix some errors and crash
Sound: implement music volume
Sound: reworking sound mixer
Sound: implement DSP
Engine: add support for five mouse extra-buttons
Engine: fix some physics bugs
SDK: add blue-shift game source to SDK (combined with main game source)

build 1305

Engine: implement bit-stream network buffer
Engine: implement custom delta-encoding with user defined script (delta.lst)
Engine: reworking client entity for get more compatibility with original HL client
Engine: make SDK compatible with HLSDK 2.3 on the server-side
Engine: fixup across transition time-bug
Engine: completely rewrite server trace
Engine: rewrite hitbox trace
Engine: rewrite SV_PointContents
Engine: implement a new movetype: compound for gluing two entities together (like movewith in spirit)
Engine: fix toss entities on conveyors
Engine: rewrite MOVETYPE_PUSH
Engine: rewrite monsters movement code
Engine: reworking client and game interfaces
Engine: fix camera bugs (no sounds when client see in the camera)
SDK: fix many-many small HL bugs in original sdk code
Engine: fix trigger retouching system
Engine: adjust beam visibility

build 1271

Engine: enable server.cfg, listenserver.cfg, mapcycle.txt etc
Engine: got to work mapcycle.txt
GameUI: implement redefine keys menu
Engine: added autocomplete for cmd 'exec'
Engine: added version info in menu

build 1270

SDK: Shared launcher code
Engine: Partially fix bmodel interpolation
Engine: use standard .cfg files instead of .rc files

build 1269

Render: cut invisible water polygons
Render: implement EF_NOWATERCSG for control func_water backface culling
Tools: fix wadlib and spritegen round bugs
FS: implement binary search for wadlumps
Engine: revert low-res timer
Network: fixup userinfo fields 'model' and 'name'
Sound: implement custom pause for various sources
Input: disable mouse events when level is loading
GameUI: adding some missed dialogs
Render: fix interpolation on flying monsters
Render: fix wrong sprite attachments
Render: fix invalid frustum culling for studiomodels ( e.g. barnacle.mdl )
Physic: fix trace for rotating bmodels
Engine: fixup physinfo save\restore bug

build 1262

Engine: add 'allow_levelshots' cvar (disabled by default) to switch between custom levelshots and normal 'loading' screen
Client: remove fmod.dll implementation
Engine: implement variable-sized fonts (console, menu hints)
Sound: added support for stereo wavs plays (menu sounds)
Render: enable custom game icons (game.ico in mod folder)
Engine: move menu code into new user dll called GameUI.dll (based on original q2e 0.40 menu code)
FS: implement simple converter liblist.gam to gameinfo.txt

build 1254

SoundLib: ogg loop points (LOOP_START comment)
Client: recalc fov y for more matched with original HL
Bshift: fix env_laser entity
Client: fix fadeout for break model pieces
Gfx: replace default.bmp font with fixed alpha-channel (thx LokiMb)
Render: fix invisible beams behind glass
Render: fix glow-sprites drawing through walls (see also r_cullflares cvar)
FS: implement filter wadlumps by wadname (e.g. gfx.wad/backtile)
Render: implement kRenderTransColor
Engine: completely moving particle code into the client.dll
Client: implement tracers for sparks, garg streaks and bullets 

build 1249

ImageLib: added support for 4-bits and monochrome uncompressed BMPs.
ImageLib: fix data align for NPOT textures in menu (e.g. slider.bmp).
StdLib: skip empty symbols in numerical string for atoi and atof.
Render: implement LoadSprite for custom client sprites (e.g. hud)
Sound: fixed bug with background music looping
Fonts: implement Half-Life creditfonts
Client: move client.dll to valve folder